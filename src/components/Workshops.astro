---
import type { Workshop } from "~/lib";

interface Props {
  data: Array<Workshop>;
}

const { data } = Astro.props;

const workshops = data.filter((workshop) => workshop.teachers);

function getLevelClass(_level: string) {
  const level = _level.toLowerCase().trim();
  switch (level) {
    case "open Level - intermediate":
      return "open-level";
    case "intermediate+":
      return "int-plus";
    case "intermediate - advanced":
      return "int-adv";
    case "advanced":
      return "advanced";
    case "standing":
      return "standing";
    default:
      return "open-level";
  }
}
---

<div class="workshops" style={`--workshops-columns: ${workshops.length};`}>
  {
    workshops.map((workshop) => {
      const levelClass = getLevelClass(workshop.level);
      return (
        <div class:list={{ workshop: true, [levelClass]: true }}>
          <span class="level">{workshop.level}</span>
          <div class="content">
            <span class="teachers">{workshop.teachers}</span>
            <h4>{workshop.name}</h4>
            {workshop.prereqs.trim() && (
              <div class="prereqs-container">
                <p class="prereqs-label">prereq:</p>
                <p class="prereqs">{workshop.prereqs}</p>
              </div>
            )}
          </div>
        </div>
      );
    })
  }
</div>

<style>
  .workshops {
    display: grid;
    flex: 1;
    gap: var(--space-4xs);
    grid-template-columns: repeat(var(--workshops-columns), 160px);
    grid-template-rows: repeat(4, auto);
    overflow: auto;
    scrollbar-width: none;
    margin: 0 calc(0px - var(--space-xs));
    padding: var(--space-3xs) var(--space-xs);
    padding-top: 0;
    scroll-behavior: smooth;
  }

  .workshop {
    display: grid;
    grid-template-rows: subgrid;
    grid-row: span 4;
    gap: 2px;

    .content,
    .level {
      padding: var(--space-xs);
      border-radius: 6px;
      width: 100%;
    }

    .level {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      text-transform: uppercase;
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;

      font-family: var(--fira);
      font-weight: 500;
      font-size: 13px;
      line-height: 13px;
    }

    .content {
      display: grid;
      grid-template-rows: subgrid;
      grid-row: span 3;

      padding: var(--space-xs);
      border-top-right-radius: 0;
      border-top-left-radius: 0;
      gap: 2px;

      .teachers {
        font-family: var(--fira);
        font-weight: 400;
        font-size: 15px;
        text-transform: uppercase;
        line-height: 16.5px;
      }

      .prereqs-container {
        padding-top: var(--space-2xs);
      }

      .prereqs-label {
        font-family: var(--fira);
        font-weight: 400;
        font-size: 12px;
        font-style: italic;
      }

      .prereqs {
        font-family: var(--fira);
        font-weight: 400;
        font-size: 13px;
        line-height: 13px;
        font-style: italic;
        text-transform: uppercase;
      }

      h4 {
        font-size: 17px;
        line-height: 17px;
        font-weight: 700;
        font-family: var(--fira);
        text-transform: uppercase;
      }
    }
  }

  .open-level {
    & .content,
    & .level {
      background: var(--color-green);
    }

    & .level {
      color: #085b32;
    }
  }
  .int-plus {
    & .content,
    & .level {
      background: var(--color-blue);
    }
    & .level {
      color: #1d5070;
    }
  }
  .int-adv {
    & .content,
    & .level {
      background: var(--color-pink);
    }
    & .level {
      color: #793f70;
    }
  }
  .advanced {
    & .content,
    & .level {
      background: var(--color-purple);
    }
    & .level {
      color: #2a285f;
    }
  }
  .standing {
    & .content,
    & .level {
      background: var(--color-yellow);
    }
    & .level {
      color: #725a03;
    }
  }
</style>
